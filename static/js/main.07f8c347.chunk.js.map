{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishDetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","RenderDish","in","transformProps","exitTransform","top","CardBody","CardText","description","RenderComments","comments","postComment","dishId","commentList","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","Button","outline","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Label","htmlFor","Col","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","type","value","color","Component","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","password","remember","checked","preventDefault","Fragment","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedbackForm","role","size","offset","checkbox","About","leaders","RenderLeader","Media","tag","left","middle","object","body","heading","RenderLeaders","list","CardHeader","title","addComment","payload","dispatch","dishesFailed","errmess","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","errorMessage","json","catch","console","log","message","actions","reset","feedback","newFeedback","Object","assign","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.07f8c347.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = \"http://localhost:3001/\";\r\n","import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardImg,\r\n   CardImgOverlay,\r\n   CardTitle,\r\n   Breadcrumb,\r\n   BreadcrumbItem,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction RenderMenuItem({ dish, onClick }) {\r\n   return (\r\n      <Card>\r\n         <Link to={`/menu/${dish.id}`}>\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardImgOverlay>\r\n               <CardTitle>{dish.name}</CardTitle>\r\n            </CardImgOverlay>\r\n         </Link>\r\n      </Card>\r\n   );\r\n}\r\n\r\nconst Menu = (props) => {\r\n   const menu = props.dishes.dishes.map((dish) => {\r\n      return (\r\n         <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n            <RenderMenuItem dish={dish} />\r\n         </div>\r\n      );\r\n   });\r\n\r\n   if (props.dishes.isLoading) {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Loading />\r\n            </div>\r\n         </div>\r\n      );\r\n   } else if (props.dishes.errMess) {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <div className=\"col-12\">\r\n                  <h4>{props.dishes.errMess}</h4>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   } else\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Breadcrumb>\r\n                  <BreadcrumbItem>\r\n                     <Link to=\"/home\">Home</Link>\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n               </Breadcrumb>\r\n               <div className=\"col-12\">\r\n                  <h3>Menu</h3>\r\n                  <hr />\r\n               </div>\r\n            </div>\r\n            <div className=\"row\">{menu}</div>\r\n         </div>\r\n      );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n   Card,\r\n   CardImg,\r\n   CardText,\r\n   CardBody,\r\n   CardTitle,\r\n   Breadcrumb,\r\n   BreadcrumbItem,\r\n   Button,\r\n   Modal,\r\n   ModalHeader,\r\n   ModalBody,\r\n   Row,\r\n   Col,\r\n   Label,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction RenderDish({ dish }) {\r\n   return (\r\n      <FadeTransform\r\n         in\r\n         transformProps={{\r\n            exitTransform: \"scale(0.5) translateY(-50%)\",\r\n         }}\r\n      >\r\n         <Card>\r\n            <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n            <CardBody>\r\n               <CardTitle>{dish.name}</CardTitle>\r\n               <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n         </Card>\r\n      </FadeTransform>\r\n   );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n   var commentList = comments.map((comment) => {\r\n      return (\r\n         <Stagger in>\r\n            {comments.map((comment) => {\r\n               return (\r\n                  <Fade in>\r\n                     <li key={comment.id}>\r\n                        <p>{comment.comment}</p>\r\n                        <p>\r\n                           -- {comment.author} ,{\" \"}\r\n                           {new Intl.DateTimeFormat(\"en-US\", {\r\n                              year: \"numeric\",\r\n                              month: \"short\",\r\n                              day: \"2-digit\",\r\n                           }).format(new Date(Date.parse(comment.date)))}\r\n                        </p>\r\n                     </li>\r\n                  </Fade>\r\n               );\r\n            })}\r\n         </Stagger>\r\n      );\r\n   });\r\n\r\n   return (\r\n      <div>\r\n         <h4>Comments</h4>\r\n         <ul className=\"list-unstyled\">{commentList}</ul>\r\n         <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n   );\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n   if (props.isLoading) {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Loading />\r\n            </div>\r\n         </div>\r\n      );\r\n   } else if (props.errMess) {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <h4>{props.errMess}</h4>\r\n            </div>\r\n         </div>\r\n      );\r\n   } else if (props.dish != null)\r\n      if (props.dish != null) {\r\n         return (\r\n            <div className=\"container\">\r\n               <div className=\"row\">\r\n                  <Breadcrumb>\r\n                     <BreadcrumbItem>\r\n                        <Link to=\"/menu\">Menu</Link>\r\n                     </BreadcrumbItem>\r\n                     <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                  </Breadcrumb>\r\n                  <div className=\"col-12\">\r\n                     <h3>{props.dish.name}</h3>\r\n                     <hr />\r\n                  </div>\r\n               </div>\r\n               <div className=\"row\">\r\n                  <div className=\"col-12 col-md-5 m-1\">\r\n                     <RenderDish dish={props.dish} />\r\n                  </div>\r\n                  <div className=\"col-12 col-md-5 m-1\">\r\n                     <RenderComments\r\n                        comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id}\r\n                     />\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         );\r\n      } else {\r\n         return <div></div>;\r\n      }\r\n};\r\n\r\nexport default DishDetail;\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nexport class CommentForm extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         isModalOpen: false,\r\n      };\r\n\r\n      this.toggleModal = this.toggleModal.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   toggleModal() {\r\n      this.setState({ isModalOpen: !this.state.isModalOpen });\r\n   }\r\n\r\n   handleSubmit(values) {\r\n      this.toggleModal();\r\n      this.props.postComment(\r\n         this.props.dishId,\r\n         values.rating,\r\n         values.author,\r\n         values.comment\r\n      );\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div>\r\n            <Button outline onClick={this.toggleModal}>\r\n               <span className=\"fa fa-pencil fa-lg\"> Submit comment</span>\r\n            </Button>\r\n\r\n            <div className=\"row row-content\">\r\n               <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                  <ModalHeader toggle={this.toggleModal}>\r\n                     {\" \"}\r\n                     Submit comment\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                     <div className=\"col-12 col-md-9\">\r\n                        <LocalForm\r\n                           onSubmit={(values) => this.handleSubmit(values)}\r\n                        >\r\n                           <Row className=\"form-group\">\r\n                              <Label htmlFor=\"rating\">Rating</Label>\r\n                              <Col md={10}>\r\n                                 <Control.select\r\n                                    model=\".rating\"\r\n                                    name=\"rating\"\r\n                                    className=\"form-control\"\r\n                                 >\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                 </Control.select>\r\n                              </Col>\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n                              <Label htmlFor=\"author\" md={2}>\r\n                                 Your name\r\n                              </Label>\r\n                              <Col md={10}>\r\n                                 <Control.text\r\n                                    model=\".author\"\r\n                                    id=\"author\"\r\n                                    name=\"author\"\r\n                                    placeholder=\"Author\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                       required,\r\n                                       minLength: minLength(3),\r\n                                       maxLength: maxLength(15),\r\n                                    }}\r\n                                 />\r\n                                 <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".author\"\r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                       required: \"Required\",\r\n                                       minLength:\r\n                                          \"Must be greater than 3 characters\",\r\n                                       maxLength:\r\n                                          \"Must be 15 charaters or less\",\r\n                                    }}\r\n                                 />\r\n                              </Col>\r\n                           </Row>\r\n\r\n                           <Row className=\"form-group\">\r\n                              <Label htmlFor=\"feedback\" md={2}>\r\n                                 Your feedback\r\n                              </Label>\r\n                              <Col md={10}>\r\n                                 <Control.textarea\r\n                                    model=\".message\"\r\n                                    id=\"message\"\r\n                                    name=\"message\"\r\n                                    rows=\"6\"\r\n                                    className=\"form-control\"\r\n                                    validators={{ required }}\r\n                                 />\r\n                                 <Errors\r\n                                    className=\"text-danger\"\r\n                                    model=\".message\"\r\n                                    show=\"touched\"\r\n                                    messages={{ required: \"Required\" }}\r\n                                 />\r\n                              </Col>\r\n                           </Row>\r\n\r\n                           <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                              Submit\r\n                           </Button>\r\n                        </LocalForm>\r\n                     </div>\r\n                  </ModalBody>\r\n               </Modal>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron, Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        };\r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n        <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n            <img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' />\r\n            </NavbarBrand>\r\n\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                </NavItem>\r\n                            </Nav> \r\n            </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    \r\n\r\n                      <Form onSubmit={this.handleLogin}>\r\n                          <FormGroup>\r\n                              <Label htmlFor=\"username\">Username</Label>\r\n                              <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                  innerRef={(input) => this.username = input} />\r\n                          </FormGroup>\r\n                          <FormGroup>\r\n                              <Label htmlFor=\"password\">Password</Label>\r\n                              <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                  innerRef={(input) => this.password = input}  />\r\n                          </FormGroup>\r\n                          <FormGroup check>\r\n                              <Label check>\r\n                                  <Input type=\"checkbox\" name=\"remember\"\r\n                                  innerRef={(input) => this.remember = input}  />\r\n                                  Remember me\r\n                              </Label>\r\n                          </FormGroup>\r\n                          <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                      </Form>\r\n\r\n\r\n                    </ModalBody>\r\n        </Modal>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to='/home'>Home</Link></li>\r\n                        <li><Link to='/aboutus'>About Us</Link></li>\r\n                        <li><Link to='/menu'>Menu</Link></li>\r\n                        <li><Link to='/contactus'>Contact Us</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport {\r\n   Card,\r\n   CardImg,\r\n   CardText,\r\n   CardBody,\r\n   CardTitle,\r\n   CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n   if (isLoading) {\r\n      return <Loading />;\r\n   } else if (errMess) {\r\n      return <h4>{errMess}</h4>;\r\n   } else\r\n      return (\r\n         <FadeTransform\r\n            in\r\n            transformProps={{\r\n               exitTransform: \"scale(0.5) translateY(-50%)\",\r\n            }}\r\n         >\r\n            <Card>\r\n               <CardImg src={baseUrl + item.image} alt={item.name} />\r\n               <CardBody>\r\n                  <CardTitle>{item.name}</CardTitle>\r\n                  {item.designation ? (\r\n                     <CardSubtitle>{item.designation}</CardSubtitle>\r\n                  ) : null}\r\n                  <CardText>{item.description}</CardText>\r\n               </CardBody>\r\n            </Card>\r\n         </FadeTransform>\r\n      );\r\n}\r\n\r\nfunction Home(props) {\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"row align-items-start\">\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderCard\r\n                  item={props.dish}\r\n                  isLoading={props.dishesLoading}\r\n                  errMess={props.dishesErrMess}\r\n               />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderCard\r\n                  item={props.promotion}\r\n                  isLoading={props.promosLoading}\r\n                  errMess={props.promosErrMess}\r\n               />\r\n            </div>\r\n            <div className=\"col-12 col-md m-1\">\r\n               <RenderCard\r\n                  item={props.leader}\r\n                  isLoading={props.leadersLoading}\r\n                  errMess={props.leadersErrMess}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n   Breadcrumb,\r\n   BreadcrumbItem,\r\n   Button,\r\n   Label,\r\n   Col,\r\n   Row,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n   /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n   }\r\n\r\n   handleSubmit(values) {\r\n      this.props.postFeedback(values);\r\n      this.props.resetFeedbackForm();\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <div className=\"row\">\r\n               <Breadcrumb>\r\n                  <BreadcrumbItem>\r\n                     <Link to=\"/home\">Home</Link>\r\n                  </BreadcrumbItem>\r\n                  <BreadcrumbItem>Contact us</BreadcrumbItem>\r\n               </Breadcrumb>\r\n               <div className=\"col-12\">\r\n                  <h3>Contact us</h3>\r\n                  <hr />\r\n               </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n               <div className=\"col-12\">\r\n                  <h3>Location Information</h3>\r\n               </div>\r\n               <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                  <h5>Our Address</h5>\r\n                  <address>\r\n                     121, Clear Water Bay Road\r\n                     <br />\r\n                     Clear Water Bay, Kowloon\r\n                     <br />\r\n                     HONG KONG\r\n                     <br />\r\n                     <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n                     <br />\r\n                     <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n                     <br />\r\n                     <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n                     <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                  </address>\r\n               </div>\r\n               <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                  <h5>Map of our Location</h5>\r\n               </div>\r\n               <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                  <div className=\"btn-group\" role=\"group\">\r\n                     <a\r\n                        role=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        href=\"tel:+85212345678\"\r\n                     >\r\n                        <i className=\"fa fa-phone\"></i> Call\r\n                     </a>\r\n                     <a role=\"button\" className=\"btn btn-info\">\r\n                        <i className=\"fa fa-skype\"></i> Skype\r\n                     </a>\r\n                     <a\r\n                        role=\"button\"\r\n                        className=\"btn btn-success\"\r\n                        href=\"mailto:confusion@food.net\"\r\n                     >\r\n                        <i className=\"fa fa-envelope-o\"></i> Email\r\n                     </a>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n               <div className=\"col-12\">\r\n                  <h3>Send us you feedback</h3>\r\n               </div>\r\n               <div className=\"col-12 col-md-9\">\r\n                  <Form\r\n                     model=\"feedback\"\r\n                     onSubmit={(values) => this.handleSubmit(values)}\r\n                  >\r\n                     <Row className=\"form-group\">\r\n                        <Label htmlFor=\"firstname\" md={2}>\r\n                           First name\r\n                        </Label>\r\n                        <Col md={10}>\r\n                           <Control.text\r\n                              model=\".firstname\"\r\n                              id=\"firstname\"\r\n                              name=\"firstname\"\r\n                              placeholder=\"First name\"\r\n                              className=\"form-control\"\r\n                              validators={{\r\n                                 required,\r\n                                 minLength: minLength(3),\r\n                                 maxLength: maxLength(15),\r\n                              }}\r\n                           />\r\n                           <Errors\r\n                              className=\"text-danger\"\r\n                              model=\".firstname\"\r\n                              show=\"touched\"\r\n                              messages={{\r\n                                 required: \"Required\",\r\n                                 minLength: \"Must be greater than 2 characters\",\r\n                                 maxLength: \"Must be 15 charaters or less\",\r\n                              }}\r\n                           />\r\n                        </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group\">\r\n                        <Label htmlFor=\"lastname\" md={2}>\r\n                           Last name\r\n                        </Label>\r\n                        <Col md={10}>\r\n                           <Control.text\r\n                              model=\".lastname\"\r\n                              id=\"lastname\"\r\n                              name=\"lastname\"\r\n                              placeholder=\"Last name\"\r\n                              className=\"form-control\"\r\n                              validators={{\r\n                                 required,\r\n                                 minLength: minLength(3),\r\n                                 maxLength: maxLength(15),\r\n                              }}\r\n                           />\r\n                           <Errors\r\n                              className=\"text-danger\"\r\n                              model=\".lastname\"\r\n                              show=\"touched\"\r\n                              messages={{\r\n                                 required: \"Required\",\r\n                                 minLength: \"Must be greater than 2 characters\",\r\n                                 maxLength: \"Must be 15 charaters or less\",\r\n                              }}\r\n                           />\r\n                        </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group\">\r\n                        <Label htmlFor=\"telnum\" md={2}>\r\n                           Contact tel.\r\n                        </Label>\r\n                        <Col md={10}>\r\n                           <Control.text\r\n                              model=\".telnum\"\r\n                              id=\"telnum\"\r\n                              name=\"telnum\"\r\n                              placeholder=\"Tel. number\"\r\n                              className=\"form-control\"\r\n                              validators={{\r\n                                 required,\r\n                                 minLength: minLength(3),\r\n                                 maxLength: maxLength(15),\r\n                                 isNumber,\r\n                              }}\r\n                           />\r\n                           <Errors\r\n                              className=\"text-danger\"\r\n                              model=\".telnum\"\r\n                              show=\"touched\"\r\n                              messages={{\r\n                                 required: \"Required\",\r\n                                 minLength: \"Must be greater than 2 characters\",\r\n                                 maxLength: \"Must be 15 charaters or less\",\r\n                                 isNumber: \"Must be a number\",\r\n                              }}\r\n                           />\r\n                        </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group\">\r\n                        <Label htmlFor=\"email\" md={2}>\r\n                           Email\r\n                        </Label>\r\n                        <Col md={10}>\r\n                           <Control.text\r\n                              model=\".email\"\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              placeholder=\"Email\"\r\n                              className=\"form-control\"\r\n                              validators={{ required, validEmail }}\r\n                           />\r\n                           <Errors\r\n                              className=\"text-danger\"\r\n                              model=\".email\"\r\n                              show=\"touched\"\r\n                              messages={{\r\n                                 required: \"Required\",\r\n                                 validEmail: \"Invalid email address\",\r\n                              }}\r\n                           />\r\n                        </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group\">\r\n                        <Col md={{ size: 6, offset: 2 }}>\r\n                           <div className=\"form-check\">\r\n                              <Label>\r\n                                 <Control.checkbox\r\n                                    model=\".agree\"\r\n                                    name=\"agree\"\r\n                                    className=\"form-check-input\"\r\n                                 />{\" \"}\r\n                                 <strong>May we contact you?</strong>\r\n                              </Label>\r\n                           </div>\r\n                        </Col>\r\n                        <Col md={{ size: 3, offset: 1 }}>\r\n                           <Control.select\r\n                              model=\".contactType\"\r\n                              name=\"contactType\"\r\n                              className=\"form-control\"\r\n                           >\r\n                              <option>Tel.</option>\r\n                              <option>Email</option>\r\n                           </Control.select>\r\n                        </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group\">\r\n                        <Label htmlFor=\"feedback\" md={2}>\r\n                           Your feedback\r\n                        </Label>\r\n                        <Col md={10}>\r\n                           <Control.textarea\r\n                              model=\".message\"\r\n                              id=\"message\"\r\n                              name=\"message\"\r\n                              rows=\"12\"\r\n                              className=\"form-control\"\r\n                           />\r\n                        </Col>\r\n                     </Row>\r\n\r\n                     <Row className=\"form-group\">\r\n                        <Col md={{ size: 10, offset: 2 }}>\r\n                           <Button type=\"submit\" color=\"primary\">\r\n                              Send feedback\r\n                           </Button>\r\n                        </Col>\r\n                     </Row>\r\n                  </Form>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport {\r\n   Breadcrumb,\r\n   BreadcrumbItem,\r\n   Card,\r\n   CardBody,\r\n   CardHeader,\r\n   Media,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction About(props) {\r\n   const leaders = props.leaders.leaders.map((leader) => {\r\n      return <RenderLeader leader={leader} />;\r\n   });\r\n\r\n   function RenderLeader({ leader }) {\r\n      return (\r\n         <Fade in>\r\n            <Media tag=\"li\" key={leader.id} className=\"col-12 mt-5\">\r\n               <Media left middle>\r\n                  <Media\r\n                     object\r\n                     src={baseUrl + leader.image}\r\n                     alt={leader.name}\r\n                  />\r\n               </Media>\r\n               <Media body className=\"ml-5\">\r\n                  <Media heading>{leader.name}</Media>\r\n                  <p>{leader.designation}</p>\r\n                  <p>{leader.description}</p>\r\n               </Media>\r\n            </Media>\r\n         </Fade>\r\n      );\r\n   }\r\n\r\n   function RenderLeaders() {\r\n      if (props.leaders.isLoading) {\r\n         return <Loading />;\r\n      } else if (props.leaders.errMess) {\r\n         return <h4>{props.leaders.errMess}</h4>;\r\n      } else\r\n         return (\r\n            <Media list>\r\n               <Stagger in>{leaders}</Stagger>\r\n            </Media>\r\n         );\r\n   }\r\n\r\n   return (\r\n      <div className=\"container\">\r\n         <div className=\"row\">\r\n            <Breadcrumb>\r\n               <BreadcrumbItem>\r\n                  <Link to=\"/home\">Home</Link>\r\n               </BreadcrumbItem>\r\n               <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n               <h3>About Us</h3>\r\n               <hr />\r\n            </div>\r\n         </div>\r\n         <div className=\"row row-content\">\r\n            <div className=\"col-12 col-md-6\">\r\n               <h2>Our History</h2>\r\n               <p>\r\n                  Started in 2010, Ristorante con Fusion quickly established\r\n                  itself as a culinary icon par excellence in Hong Kong. With\r\n                  its unique brand of world fusion cuisine that can be found\r\n                  nowhere else, it enjoys patronage from the A-list clientele in\r\n                  Hong Kong. Featuring four of the best three-star Michelin\r\n                  chefs in the world, you never know what will arrive on your\r\n                  plate the next time you visit us.\r\n               </p>\r\n               <p>\r\n                  The restaurant traces its humble beginnings to{\" \"}\r\n                  <em>The Frying Pan</em>, a successful chain started by our\r\n                  CEO, Mr. Peter Pan, that featured for the first time the\r\n                  world's best cuisines in a pan.\r\n               </p>\r\n            </div>\r\n            <div className=\"col-12 col-md-5\">\r\n               <Card>\r\n                  <CardHeader className=\"bg-primary text-white\">\r\n                     Facts At a Glance\r\n                  </CardHeader>\r\n                  <CardBody>\r\n                     <dl className=\"row p-1\">\r\n                        <dt className=\"col-6\">Started</dt>\r\n                        <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                        <dt className=\"col-6\">Major Stake Holder</dt>\r\n                        <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                        <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                        <dd className=\"col-6\">$1,250,375</dd>\r\n                        <dt className=\"col-6\">Employees</dt>\r\n                        <dd className=\"col-6\">40</dd>\r\n                     </dl>\r\n                  </CardBody>\r\n               </Card>\r\n            </div>\r\n            <div className=\"col-12\">\r\n               <Card>\r\n                  <CardBody className=\"bg-faded\">\r\n                     <blockquote className=\"blockquote\">\r\n                        <p className=\"mb-0\">\r\n                           You better cut the pizza in four pieces because I'm\r\n                           not hungry enough to eat six.\r\n                        </p>\r\n                        <footer className=\"blockquote-footer\">\r\n                           Yogi Berra,\r\n                           <cite title=\"Source Title\">\r\n                              The Wit and Wisdom of Yogi Berra, P. Pepe,\r\n                              Diversion Books, 2014\r\n                           </cite>\r\n                        </footer>\r\n                     </blockquote>\r\n                  </CardBody>\r\n               </Card>\r\n            </div>\r\n         </div>\r\n         <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n               <h2>Corporate Leadership</h2>\r\n            </div>\r\n            <div className=\"col-12\">\r\n               <RenderLeaders />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default About;\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nexport const addComment = (comment) => ({\r\n   type: ActionTypes.ADD_COMMENT,\r\n   payload: comment,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n   const newComment = {\r\n      dishId: dishId,\r\n      rating: rating,\r\n      author: author,\r\n      comment: comment,\r\n   };\r\n\r\n   newComment.date = new Date().toISOString();\r\n\r\n   return fetch(baseUrl + \"comments\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newComment),\r\n      headers: {\r\n         \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"same-origin\",\r\n   })\r\n      .then(\r\n         (response) => {\r\n            if (response.ok) {\r\n               return response;\r\n            } else {\r\n               var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n               );\r\n               error.response = response;\r\n\r\n               throw error;\r\n            }\r\n         },\r\n         (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n         }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((response) => dispatch(addComment(response)))\r\n      .catch((error) => {\r\n         console.log(\"Post comments: \" + error.message);\r\n         alert(\"Comments could not be posted:\\n\" + error.message);\r\n      });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n   dispatch(dishesLoading(true));\r\n\r\n   return fetch(baseUrl + \"dishes\")\r\n      .then(\r\n         (response) => {\r\n            if (response.ok) {\r\n               return response;\r\n            } else {\r\n               var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n               );\r\n               error.response = response;\r\n\r\n               throw error;\r\n            }\r\n         },\r\n         (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n         }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((dishes) => dispatch(addDishes(dishes)))\r\n      .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => (dispatch) => ({\r\n   type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n   type: ActionTypes.DISHES_FAILED,\r\n   payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n   type: ActionTypes.ADD_DISHES,\r\n   payload: dishes,\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n   return fetch(baseUrl + \"comments\")\r\n      .then(\r\n         (response) => {\r\n            if (response.ok) {\r\n               return response;\r\n            } else {\r\n               var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n               );\r\n               error.response = response;\r\n\r\n               throw error;\r\n            }\r\n         },\r\n         (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n         }\r\n      )\r\n\r\n      .then((response) => response.json())\r\n      .then((comments) => dispatch(addComments(comments)))\r\n      .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n   type: ActionTypes.COMMENTS_FAILED,\r\n   payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n   type: ActionTypes.ADD_COMMENTS,\r\n   payload: comments,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n   dispatch(promosLoading(true));\r\n\r\n   return fetch(baseUrl + \"promotions\")\r\n      .then(\r\n         (response) => {\r\n            if (response.ok) {\r\n               return response;\r\n            } else {\r\n               var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n               );\r\n               error.response = response;\r\n\r\n               throw error;\r\n            }\r\n         },\r\n         (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n         }\r\n      )\r\n\r\n      .then((response) => response.json())\r\n      .then((promos) => dispatch(addPromos(promos)))\r\n      .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => (dispatch) => ({\r\n   type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n   type: ActionTypes.PROMOS_FAILED,\r\n   payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n   type: ActionTypes.ADD_PROMOS,\r\n   payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n   dispatch(leadersLoading(true));\r\n\r\n   return fetch(baseUrl + \"leaders\")\r\n      .then(\r\n         (response) => {\r\n            if (response.ok) {\r\n               return response;\r\n            } else {\r\n               var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n               );\r\n               error.response = response;\r\n\r\n               throw error;\r\n            }\r\n         },\r\n         (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n         }\r\n      )\r\n\r\n      .then((response) => response.json())\r\n      .then((leaders) => dispatch(addLeaders(leaders)))\r\n      .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => (dispatch) => ({\r\n   type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n   type: ActionTypes.LEADERS_FAILED,\r\n   payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n   type: ActionTypes.ADD_LEADERS,\r\n   payload: leaders,\r\n});\r\n\r\nexport const postFeedback = (feedback) => (dispatch) => {\r\n   const newFeedback = Object.assign(\r\n      { date: new Date().toISOString() },\r\n      feedback\r\n   );\r\n\r\n   return fetch(baseUrl + \"feedback\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n         \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"same-origin\",\r\n   })\r\n      .then(\r\n         (response) => {\r\n            if (response.ok) {\r\n               return response;\r\n            } else {\r\n               var error = new Error(\r\n                  \"Error \" + response.status + \": \" + response.statusText\r\n               );\r\n               error.response = response;\r\n\r\n               throw error;\r\n            }\r\n         },\r\n         (error) => {\r\n            var errorMessage = new Error(error.errorMessage);\r\n            throw errorMessage;\r\n         }\r\n      )\r\n      .then((response) => response.json())\r\n      .then((response) => dispatch(addComment(response)))\r\n      .catch((error) => {\r\n         console.log(\"Post feedback: \" + error.message);\r\n         alert(\"Feedback could not be posted:\\n\" + error.message);\r\n      });\r\n};\r\n","export const ADD_COMMENT = \"ADD_COMMENT\";\r\nexport const DISHES_LOADING = \"DISHES_LOADING\";\r\nexport const DISHES_FAILED = \"DISHES_FAILED\";\r\nexport const ADD_DISHES = \"ADD_DISHES\";\r\nexport const ADD_COMMENTS = \"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED = \"COMMENTS_FAILED\";\r\nexport const PROMOS_LOADING = \"PROMOS_LOADING\";\r\nexport const ADD_PROMOS = \"ADD_PROMOS\";\r\nexport const PROMOS_FAILED = \"PROMOS_FAILED\";\r\nexport const LEADERS_LOADING = \"LEADERS_LOADING\";\r\nexport const LEADERS_FAILED = \"LEADERS_FAILED\";\r\nexport const ADD_LEADERS = \"ADD_LEADERS\";\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"./MenuComponent\";\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport Home from \"./HomeComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport About from \"./AboutComponent\";\r\n\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n   postComment,\r\n   fetchDishes,\r\n   fetchComments,\r\n   fetchPromos,\r\n   fetchLeaders,\r\n   postFeedback,\r\n} from \"../redux/ActionCreators\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dishes: state.dishes,\r\n      comments: state.comments,\r\n      promotions: state.promotions,\r\n      leaders: state.leaders,\r\n   };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n   postComment: (dishId, rating, author, comment) =>\r\n      dispatch(postComment(dishId, rating, author, comment)),\r\n   fetchDishes: () => {\r\n      dispatch(fetchDishes());\r\n   },\r\n   resetFeedbackForm: () => {\r\n      dispatch(actions.reset(\"feedback\"));\r\n   },\r\n   fetchPromos: () => {\r\n      dispatch(fetchPromos());\r\n   },\r\n   fetchComments: () => {\r\n      dispatch(fetchComments());\r\n   },\r\n   fetchLeaders: () => {\r\n      dispatch(fetchLeaders());\r\n   },\r\n   postFeedback: (feedback) => dispatch(postFeedback(feedback)),\r\n});\r\n\r\nclass Main extends Component {\r\n   componentDidMount() {\r\n      this.props.fetchDishes();\r\n      this.props.fetchComments();\r\n      this.props.fetchPromos();\r\n      this.props.fetchLeaders();\r\n   }\r\n\r\n   render() {\r\n      const HomePage = () => {\r\n         return (\r\n            <Home\r\n               dish={\r\n                  this.props.dishes.dishes.filter((dish) => dish.featured)[0]\r\n               }\r\n               dishesLoading={this.props.dishes.isLoading}\r\n               dishesErrMess={this.props.dishes.errMess}\r\n               promotion={\r\n                  this.props.promotions.promotions.filter(\r\n                     (promo) => promo.featured\r\n                  )[0]\r\n               }\r\n               promosLoading={this.props.promotions.isLoading}\r\n               promosErrMess={this.props.promotions.errMess}\r\n               leader={\r\n                  this.props.leaders.leaders.filter(\r\n                     (leader) => leader.featured\r\n                  )[0]\r\n               }\r\n               leadersLoading={this.props.leaders.isLoading}\r\n               leadersErrMess={this.props.leaders.errMess}\r\n            />\r\n         );\r\n      };\r\n\r\n      const DishWithId = ({ match }) => {\r\n         return (\r\n            <DishDetail\r\n               dish={\r\n                  this.props.dishes.dishes.filter(\r\n                     (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n                  )[0]\r\n               }\r\n               isLoading={this.props.dishes.isLoading}\r\n               errMess={this.props.dishes.errMess}\r\n               comments={this.props.comments.comments.filter(\r\n                  (comment) =>\r\n                     comment.dishId === parseInt(match.params.dishId, 10)\r\n               )}\r\n               commentsErrMess={this.props.comments.errMess}\r\n               postComment={this.props.postComment}\r\n            />\r\n         );\r\n      };\r\n\r\n      return (\r\n         <div>\r\n            <Header />\r\n            <TransitionGroup>\r\n               <CSSTransition\r\n                  key={this.props.location.key}\r\n                  classNames=\"page\"\r\n                  timeout={300}\r\n               >\r\n                  <Switch>\r\n                     <Route path=\"/home\" component={HomePage} />\r\n                     <Route\r\n                        exact\r\n                        path=\"/menu\"\r\n                        component={() => <Menu dishes={this.props.dishes} />}\r\n                     />\r\n                     <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n                     <Route\r\n                        exact\r\n                        path=\"/contactus\"\r\n                        component={() => (\r\n                           <Contact\r\n                              resetFeedbackForm={this.props.resetFeedbackForm}\r\n                              postFeedback={this.props.postFeedback}\r\n                           />\r\n                        )}\r\n                     />\r\n                     <Route\r\n                        exact\r\n                        path=\"/aboutus\"\r\n                        component={() => <About leaders={this.props.leaders} />}\r\n                     />\r\n                     <Redirect to=\"/home\" />\r\n                  </Switch>\r\n               </CSSTransition>\r\n            </TransitionGroup>\r\n            <Footer />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","//import { DISHES } from '../shared/dishes';\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Dishes = (\r\n   state = { isLoading: true, errMess: null, dishes: [] },\r\n   action\r\n) => {\r\n   switch (action.type) {\r\n      case ActionTypes.ADD_DISHES:\r\n         return {\r\n            ...state,\r\n            isLoading: false,\r\n            errMess: null,\r\n            dishes: action.payload,\r\n         };\r\n\r\n      case ActionTypes.DISHES_LOADING:\r\n         return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n\r\n      case ActionTypes.DISHES_FAILED:\r\n         return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\r\n   switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n         return { ...state, errMess: null, comments: action.payload };\r\n\r\n      case ActionTypes.COMMENTS_FAILED:\r\n         return { ...state, errMess: action.payload };\r\n\r\n      case ActionTypes.ADD_COMMENT:\r\n         var comment = action.payload;\r\n         return { ...state, comments: state.comments.concat(comment) };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Promotions = (\r\n   state = { isLoading: true, errMess: null, promotions: [] },\r\n   action\r\n) => {\r\n   switch (action.type) {\r\n      case ActionTypes.ADD_PROMOS:\r\n         return {\r\n            ...state,\r\n            isLoading: false,\r\n            errMess: null,\r\n            promotions: action.payload,\r\n         };\r\n\r\n      case ActionTypes.PROMOS_LOADING:\r\n         return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n\r\n      case ActionTypes.PROMOS_FAILED:\r\n         return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (\r\n   state = {\r\n      isLoading: true,\r\n      errMess: null,\r\n      leaders: [],\r\n   },\r\n   action\r\n) => {\r\n   switch (action.type) {\r\n      case ActionTypes.ADD_LEADERS:\r\n         return {\r\n            ...state,\r\n            isLoading: false,\r\n            errMess: null,\r\n            leaders: action.payload,\r\n         };\r\n\r\n      case ActionTypes.LEADERS_LOADING:\r\n         return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n      case ActionTypes.LEADERS_FAILED:\r\n         return {\r\n            ...state,\r\n            isLoading: false,\r\n            errMess: action.payload,\r\n            leaders: [],\r\n         };\r\n\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n","export const InitialFeedback = {\r\n   firstname: \"\",\r\n   lastname: \"\",\r\n   telnum: \"\",\r\n   email: \"\",\r\n   agree: false,\r\n   contactType: \"Tel.\",\r\n   message: \"\",\r\n};\r\n","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n// import { DISHES} from './shared/dishes';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n      <BrowserRouter>\r\n        <div >\r\n          <Main />\r\n        </div>\r\n      </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n\r\n  }\r\n  \r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comments\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\n\r\nimport { createForms } from \"react-redux-form\";\r\nimport { InitialFeedback } from \"./forms\";\r\n\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\n\r\nexport const ConfigureStore = () => {\r\n   const store = createStore(\r\n      combineReducers({\r\n         dishes: Dishes,\r\n         comments: Comments,\r\n         promotions: Promotions,\r\n         leaders: Leaders,\r\n         ...createForms({\r\n            feedback: InitialFeedback,\r\n         }),\r\n      }),\r\n      applyMiddleware(thunk, logger)\r\n   );\r\n\r\n   return store;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}